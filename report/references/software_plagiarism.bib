
@article{PlagiarismProgrammingAssignments,
        author={Joy,M. and Joy,M. and Luck,M.},
        year={1999},
        title={Plagiarism in programming assignments},
        journal={IEEE Transactions on Education},
        volume={42},
        number={2},
        pages={129-133},
        note={http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=762946},
        abstract={The assessment of programming courses is usually carried out by means of programming assignments. Since it is simple to copy and edit computer programs, however, there will always be a temptation among some students following such courses to copy and modify the work of others. As the number of students in these courses is often high, it can be very difficult to detect this plagiarism. The authors have developed a package which will allow programming assignments to be submitted online, and which includes software to assist in detecting possible instances of plagiarism. In this paper, they discuss the concerns that motivated this work, describe the developed software, tailoring the software to different requirements and finally consider its implications for large group teaching.},
        keywords={students; courses; programming courses; EDUCATION, SCIENTIFIC DISCIPLINES; computer science; plagiarism; computer science education; ENGINEERING, ELECTRICAL &amp; ELECTRONIC; computer programs; software; large group teaching; programming; teaching; programming assignments assessment},
        isbn={0018-9359},
        language={English},
}
}

@article{
        author={Rosales,F. and Rosales,F. and Garcia,A. and Garcia,A. and Rodriguez,S. and Rodriguez,S. and Pedraza,J. L. and Pedraza,J. L. and Mendez,R. and Mendez,R. and Nieto,M. M. and Nieto,M. M.},
        year={2008},
        title={Detection of Plagiarism in Programming Assignments},
        journal={IEEE Transactions on Education},
        volume={51},
        number={2},
        pages={174-183},
        note={http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=4455467},
        abstract={Laboratory work assignments are very important for computer science learning. Over the last 12 years many students have been involved in solving such assignments in the authors' department, having reached a figure of more than 400 students doing the same assignment in the same year. This number of students has required teachers to pay special attention to conceivable plagiarism cases. A plagiarism detection tool has been developed as part of a full toolset for helping in the management of the laboratory work assignments. This tool defines and uses four similarity criteria to measure how similar two assignment implementations are. The paper describes the plagiarism detection tool and the experience of using it over the last 12 years in four different programming assignments, from microprogramming a CPU to system programming in C.},
        keywords={MANAGEMENT; EDUCATION, SCIENTIFIC DISCIPLINES; computer engineering learning; microprogramming; computer science learning; laboratory work programming assignment; mass courses management; ENGINEERING, ELECTRICAL &amp; ELECTRONIC; computer science education; software plagiarism detection; string similarity measurement; C language; WORK; system programming; COURSES; plagiarism detection tool},
        isbn={0018-9359},
        language={English},
}
}

@article{
        author={Whale,Geoff},
        year={1990},
        title={Software metrics and plagiarism detection},
        journal={The Journal of Systems & Software},
        volume={13},
        number={2},
        pages={131-138},
        note={http://www.sciencedirect.com/science/article/pii/0164121290901186},
        abstract={Â  Software metrics have been developed to measure software quality and guide the software development process. One application of the wide-ranging use of metrics is to detect plagiarism in student programming assignments. Plagiarism detection seeks to identify similar programs from a large group implementing the same task. Automated methods for selecting similar student submissions are based on comparisons between reduced representations of the programs. These representations are software metrics. To be useful in similarity detection, a metric should: 1. represent program characteristics that are inherently difficult to change in order to disguise a copy, 2. be robust, exhibiting minimal changes resulting from nonsignificant alterations to the source text, 3. be relatively easy to compare, and 4. be applicable to a range of programming languages. An application-specific metric has been developed that represents the structure of a program as a variable-length profile. The structure profile has formed the basis for a very successful system to monitor and help prevent plagiarism in student assignments.},
        keywords={Software; COMPUTER SCIENCE, THEORY &amp; METHODS; Studies; Computer programming; COMPUTER SCIENCE, SOFTWARE, GRAPHICS, PROGRAMMING; Plagiarism},
        isbn={0164-1212},
        language={English},
}
}

@article{
        author={Parker,A. and Hamblen,J. O.},
        year={1989},
        title={Computer algorithms for plagiarism detection},
        journal={IEEE Transactions on Education},
        volume={32},
        number={2},
        pages={94-99},
        note={http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=28038},
        abstract={A survey of computer algorithms used for the detection of student plagiarism is presented. A summary of several algorithms is provided. Common features of the different plagiarism detection algorithms are described. Ethical and administrative issues involving detected plagiarism are discussed.< >},
        keywords={computer algorithms; Microcomputers; EDUCATION, SCIENTIFIC DISCIPLINES; White spaces; ENGINEERING, ELECTRICAL &amp; ELECTRONIC; computer science education; Automatic control; Plagiarism; Logic; Computer networks; Writing; security of data; industrial property; student plagiarism; plagiarism detection; Change detection algorithms; Character generation; educational administrative data processing},
        isbn={0018-9359},
        language={English},
}
}

