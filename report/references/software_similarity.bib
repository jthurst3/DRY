
@article{SimilarityLanguagesPrograms,
        author={Cui,CW and Dang,Z. and Fischer,TR and Ibarra,OH},
        year={2013},
        title={Similarity in languages and programs},
        journal={THEORETICAL COMPUTER SCIENCE},
        volume={498},
        pages={58-75},
        note={http://gateway.webofknowledge.com/gateway/Gateway.cgi?GWVersion=2&SrcAuth=SerialsSolutions&SrcApp=Summon&KeyUT=000323358300005&DestLinkType=FullRecord&DestApp=WOS},
        abstract={We use an information-theoretic notion, namely, (Shannon) information rate, to generalize common syntactic similarity metrics (like Hamming distance and longest common subsequences) between strings to ones between languages. We show that the similarity metrics between two regular languages are computable. We further study self-similarity of a regular language under various similarity metrics. As far as semantic similarity is concerned, we study the amplitude of an automaton, which intuitively characterizes how much a typical execution of the automaton fluctuates. Finally, we investigate, through experiments, how to measure similarity between two real-world programs using Lempel-Ziv compression on the runs at the assembly level. (C) 2013 Elsevier B.V. All rights reserved.},
        keywords={SYSTEMS; AUTOMATA; COMPUTER SCIENCE, THEORY &amp; METHODS; Computer science; COMPLEXITY; INDIVIDUAL SEQUENCES; Robots; MULTICOUNTER MACHINES; Lempel-Ziv compression; COMPRESSION; DECISION-PROBLEMS; GRAPH SIMILARITY; Formal languages; Electrical engineering; Shannon information},
        isbn={0304-3975},
        language={English},
}
}

@article{ProgramSimilarityPopulations,
        author={WHALE,G.},
        year={1990},
        title={IDENTIFICATION OF PROGRAM SIMILARITY IN LARGE POPULATIONS},
        journal={COMPUTER JOURNAL},
        volume={33},
        number={2},
        pages={140-146},
        note={http://gateway.webofknowledge.com/gateway/Gateway.cgi?GWVersion=2&SrcAuth=SerialsSolutions&SrcApp=Summon&KeyUT=A1990CZ98300007&DestLinkType=FullRecord&DestApp=WOS},
        keywords={COMPUTER SCIENCE, HARDWARE & ARCHITECTURE},
        isbn={0010-4620},
        language={English},
}
}

@article{GraphSimilarityStudentPrograms,
        author={Naud√©,Kevin A. and Greyling,Jean H. and Vogts,Dieter},
        year={2010},
        title={Marking student programs using graph similarity},
        journal={Computers & Education},
        volume={54},
        number={2},
        pages={545-561},
        note={http://gateway.webofknowledge.com/gateway/Gateway.cgi?GWVersion=2&SrcAuth=SerialsSolutions&SrcApp=Summon&KeyUT=000273145400023&DestLinkType=FullRecord&DestApp=WOS},
        abstract={We present a novel approach to the automated marking of student programming assignments. Our technique quantifies the structural similarity between unmarked student submissions and marked solutions, and is the basis by which we assign marks. This is accomplished through an efficient novel graph similarity measure (AssignSim). Our experiments show good correlation of assigned marks with that of a human marker. (C) 2009 Elsevier Ltd. All rights reserved.},
        keywords={Graph similarity; COMPUTER SCIENCE, INTERDISCIPLINARY APPLICATIONS; Computer-assisted assessment; Programming and programming languages; EDUCATION &amp; EDUCATIONAL RESEARCH},
        isbn={0360-1315},
        language={English},
}
}

@article{
        author={Vitanyi,P. M. B. and Li,M. and Li,B. and Chen,X.},
        year={2004},
        title={The similarity metric},
        journal={IEEE Transactions on Information Theory},
        volume={50},
        number={12},
        pages={3250-3264},
        note={http://dare.uva.nl/record/191335},
        abstract={A new class of distances appropriate for measuring similarity relations between sequences, say one type of similarity per distance, is studied. We propose a new "normalized information distance," based on the noncomputable notion of Kolmogorov complexity, and show that it is in this class and it minorizes every computable distance in the class (that is, it is universal in that it discovers all computable similarities). We demonstrate that it is a metric and call it the similarity metric . This theory forms the foundation for a new practical tool. To evidence generality and robustness, we give two distinctive applications in widely divergent areas using standard compression programs like gzip and GenCompress. First, we compare whole mitochondrial genomes and infer their evolutionary history. This results in a first completely automatic computed whole mitochondrial phylogeny tree. Secondly, we fully automatically compute the language tree of 52 different languages.},
        keywords={language tree computation; language tree construction; INFORMATION; ALGORITHMS; standard compression programs; similarity metric; phylogeny tree; whole mitochondrial genomes; PHYLOGENETIC TREES; Kolmogorov complexity; COMPUTER SCIENCE, INFORMATION SYSTEMS; dissimilarity distance; Data compression; universal similarity metric; phylogeny in bioinformatics; normalized information distance; SPACE; Theory; normalized compression distance; Codes; data mining; gzip; DISTANCE; SEQUENCES; Sequences (Mathematics); information theory; ENGINEERING, ELECTRICAL &amp; ELECTRONIC; GENOME PHYLOGENY; Data compression (Information theory); parameter-free data mining; GenCompress},
        isbn={0018-9448},
        language={English},
}
}

@article{
        McGahn1995,
        author={McGahn,Donald F.},
        year={1995},
        title={Copyright Infringement of Protected Computer Software: An Analytical Method to Determine Substantial Similarity},
        journal={Rutgers Computer and Technology Law Journal},
        volume={21},
        number={1},
        pages={88},
        note={http://openurl.lib.rochester.edu/?ctx_ver=Z39.88-2004&ctx_enc=info%3Aofi%2Fenc%3AUTF-8&rfr_id=info:sid/summon.serialssolutions.com&rft_val_fmt=info:ofi/fmt:kev:mtx:journal&rft.genre=article&rft.atitle=Copyright+Infringement+of+Protected+Computer+Software%3A+An+Analytical+Method+to+Determine+Substantial+Similarity&rft.jtitle=Rutgers+Computer+and+Technology+Law+Journal&rft.au=McGahn%2C+Donald+F&rft.date=1995&rft.issn=0735-8938&rft.volume=21&rft.issue=1&rft.spage=88&rft.externalDBID=n%2Fa&rft.externalDocID=r54400530002&paramdict=en-US},
        keywords={Analysis; Copyright; Copyright infringement},
        isbn={0735-8938},
        language={English},
}
}

@article{
        Tu1994,
        author={Tu,Tsu-Man P.},
        year={1994},
        title={Copyright - computer software copyright infringement - three-step test for substantial similarity, involving abstraction, filtration, and comparison should be applied in determining whether computer software copyright has been infringed},
        journal={Seton Hall Law Review},
        volume={25},
        number={1},
        pages={412},
        note={http://openurl.lib.rochester.edu/?ctx_ver=Z39.88-2004&ctx_enc=info%3Aofi%2Fenc%3AUTF-8&rfr_id=info:sid/summon.serialssolutions.com&rft_val_fmt=info:ofi/fmt:kev:mtx:journal&rft.genre=article&rft.atitle=Copyright+-+computer+software+copyright+infringement+-+three-step+test+for+substantial+similarity%2C+involving+abstraction%2C+filtration%2C+and+comparison+should+be+applied+in+determining+whether+computer+software+copyright+has+been+infringed&rft.jtitle=Seton+Hall+Law+Review&rft.au=Tu%2C+Tsu-Man+Peter&rft.date=1994&rft.pub=Seton+Hall+University+School+of+Law&rft.issn=0586-5964&rft.volume=25&rft.issue=1&rft.spage=412&rft.externalDBID=n%2Fa&rft.externalDocID=15929476&paramdict=en-US},
        keywords={Cases; Copyright; Software protection},
        isbn={0586-5964},
        language={English},
}
}

@article {ProgramSim,
        author={Whale,Geoffrey R.},
        year={1990},
        title={Program similarity: Identification and measurement},
        journal={ProQuest Dissertations and Theses},
        pages={0-1},
        note={Copyright - Copyright UMI - Dissertations Publishing 1990; Last updated - 2014-01-10; First page - n/a},
        abstract={Plagiarism in programming classes has become more acute following recent trends towards increased enrolments. Automated methods for identifying similar programs in large populations depend on the choice of suitable program representations. Conventional approaches to plagiarism detection have adopted statistical measures and other representations related to complexity metrics. The limitations of such methods are outlined, and the need for new notations is established. To assess the capabilities of any new system, a paradigm for evaluating the relative performance of a group of plagiarism-detection implementations is presented. The performance of each system can be related to that of an ideal similarity detector. An appropriate basis for selecting similar programs is program structure. A representation of syntactic structure is proposed, recording the sequence and nesting of control structures in the source program. Comparisons are made through a derived profile of terms, each term denoting the structure of some program fragment. The purpose of the profile is to select for each submission in the population a small set of structurally near neighbours for further investigation. Having identified possibly related pairs, a more precise indication of similarity is required. The token-sequence representation used for similarity measurement incorporates detail down to the expression level, and can be compared using general string-matching methods. A composite of two file-difference algorithms was found to be most successful in this application. The length of a match between a pair of token sequences is mapped onto a scale that highlights probable dependencies. The adjustable sensitivity of the system permits the instructor to identify the majority of related submissions without wasting time on false matches. The results of extensive testing of this system along with implementations of previous methods are reported. They demonstrate the superiority of structure-based methods in general over attribute-counting systems, and the pre-eminence of the proposed techniques in particular. Further applications for the techniques described are envisaged, in the areas of multiversion programming, program difference presentation, student program assessment, and commercial plagiarism detection.},
        keywords={Applied sciences; Electrical engineering; 0544:Electrical engineering},
        language={English},
        url={http://search.proquest.com/docview/303858518?accountid=13567},
}
