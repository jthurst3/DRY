\begin{thebibliography}{10}

\bibitem{Javaparser}
javaparser - java 1.5 parser and ast - google project hosting.
\newblock \url{https://code.google.com/p/javaparser/}.
\newblock Accessed: 2014-12-03.

\bibitem{WETness}
The wet cart - the daily wtf.
\newblock \url{http://thedailywtf.com/articles/The-WET-Cart}.
\newblock Accessed: 2014-12-02.

\bibitem{Modularity1979}
A.~L. Baker and S.~H. Zweben.
\newblock The use of software science in evaluating modularity concepts.
\newblock {\em IEEE Transactions on Software Engineering}, SE-5(2):110--120,
  1979.

\bibitem{NoSilverBullet}
Brooks.
\newblock No silver bullet essence and accidents of software engineering.
\newblock {\em Computer}, 20(4):10--19, 1987.

\bibitem{PragmaticProgrammer}
Andrew Hunt and David Thomas.
\newblock {\em The Pragmatic Programmer: From Journeyman to Master}.
\newblock Addison-Wesley Professional, 1999.

\bibitem{PlagiarismProgrammingAssignments}
M.~Joy, M.~Joy, and M.~Luck.
\newblock Plagiarism in programming assignments.
\newblock {\em IEEE Transactions on Education}, 42(2):129--133, 1999.

\bibitem{McGahn1995}
Donald~F. McGahn.
\newblock Copyright infringement of protected computer software: An analytical
  method to determine substantial similarity.
\newblock {\em Rutgers Computer and Technology Law Journal}, 21(1):88, 1995.

\bibitem{GraphSimilarityStudentPrograms}
Kevin~A. Naud√©, Jean~H. Greyling, and Dieter Vogts.
\newblock Marking student programs using graph similarity.
\newblock {\em Computers \& Education}, 54(2):545--561, 2010.

\bibitem{TreeEditDistance}
Mateusz Pawlik and Nikolaus Augsten.
\newblock Rted: A robust algorithm for the tree edit distance.
\newblock 2011.

\bibitem{LogicalModularity}
D.~Ratiu, R.~Marinescu, and J.~Jurjens.
\newblock The logical modularity of programs.
\newblock pages 123--127, 2009.

\bibitem{ProgramSimilarityPopulations}
G.~WHALE.
\newblock Identification of program similarity in large populations.
\newblock {\em COMPUTER JOURNAL}, 33(2):140--146, 1990.

\end{thebibliography}
